// https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/modules/payments/abort_payment_event.idl;drc=c2e7d4f0b24814b0d1c51a964db34ec5b4930756
// https://github.com/w3c/payment-handler/pull/207
[Exposed=ServiceWorker]
interface AbortPaymentEvent : ExtendableEvent {
  constructor(DOMString type, optional ExtendableEventInit eventInitDict = {});
  undefined respondWith(Promise<boolean> paymentAbortedResponse);
};
partial interface ServiceWorkerGlobalScope {
  attribute EventHandler onabortpayment;
};

// https://github.com/w3c/payment-handler/pull/170
partial interface CanMakePaymentEvent {
  readonly attribute FrozenArray<PaymentDetailsModifier> modifiers;
};

partial interface PaymentRequestEvent {
  // https://github.com/w3c/payment-handler/pull/393
  readonly attribute DOMString instrumentKey;
};


partial interface CanMakePaymentEvent {
  attribute DOMString paymentRequestOrigin;
  attribute DOMString topOrigin;
};

// Removed in https://github.com/w3c/payment-handler/pull/409
partial interface CanMakePaymentEvent {
  attribute Float32Array methodData;
};

partial interface PaymentManager {
  [SameObject] readonly attribute PaymentInstruments instruments;
};


[SecureContext, Exposed=(Window,Worker)]
interface PaymentInstruments {
  Promise<boolean> delete(DOMString instrumentKey);
  Promise<any> get(DOMString instrumentKey);
  Promise<sequence<DOMString>>  keys();
  Promise<boolean> has(DOMString instrumentKey);
  Promise<undefined> set(DOMString instrumentKey, any details);
  Promise<undefined> clear();
};
